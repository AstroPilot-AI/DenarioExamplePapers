{
    "sub_tasks": [
        {
            "bullet_points": [
                "Load the merger tree dataset from the specified file using PyTorch.",
                "For each merger tree, extract node features (`x`), edge indices (`edge_index`), edge attributes (`edge_attr`), and target variable (`y`).",
                "Apply log transformation to mass and vmax node features.",
                "Normalize all node features (log mass, log vmax, concentration, scale factor) across the dataset.",
                "Engineer edge features: compute mass ratio and time difference for each edge, normalize these features.",
                "Compute an assembly bias proxy for each tree (mean mass of main halos at z=0).",
                "Split the dataset into training, validation, and test sets (70:15:15).",
                "Explicitly save the preprocessed dataset and normalization parameters after normalization and feature engineering for reproducibility and faster iterations."
            ],
            "sub_task": "Data Preprocessing and Feature Engineering",
            "sub_task_agent": "engineer"
        },
        {
            "bullet_points": [
                "For each merger tree, construct a simplicial complex using the scale factor as the filtration parameter.",
                "Compute persistent homology (H0 and H1) using a TDA library (e.g., GUDHI or ripser.py).",
                "Extract topological features: number of components, number of loops, average/max persistence, Betti numbers at various thresholds.",
                "Validate the TDA results by comparing the extracted topological features across a subset of trees to ensure consistency and correctness.",
                "Calculate Pearson correlation coefficients between these topological features and the assembly bias proxy on the training set.",
                "Generate plots: persistence diagrams, Betti curves, and correlation heatmaps."
            ],
            "sub_task": "Topological Data Analysis (TDA) and Correlation with Assembly Bias",
            "sub_task_agent": "engineer"
        },
        {
            "bullet_points": [
                "Design a GCN-based model using PyTorch Geometric, with configurable number of layers and hidden dimensions.",
                "Implement the model to take merger trees as input and predict the assembly bias proxy.",
                "Integrate node and engineered edge features into the model.",
                "Set up the training pipeline with MSE loss and Adam optimizer.",
                "Prepare code for hyperparameter tuning (number of layers, hidden size, learning rate, batch size).",
                "Include a mechanism for logging the training process, such as saving the model's weights at each epoch and recording metrics for later analysis."
            ],
            "sub_task": "GNN Model Design and Implementation",
            "sub_task_agent": "engineer"
        },
        {
            "bullet_points": [
                "Train the GNN model on the training set, using the validation set for hyperparameter tuning.",
                "Monitor training and validation loss, and select the best model based on validation performance.",
                "Evaluate the final model on the test set, reporting MSE and R-squared.",
                "Generate plots: training/validation loss curves, predicted vs. true assembly bias on test set, feature importance if applicable.",
                "Generate additional plots to visualize the learned embeddings of the GNN, such as t-SNE or PCA projections, to understand how the model represents the data."
            ],
            "sub_task": "Model Training, Validation, and Testing",
            "sub_task_agent": "engineer"
        },
        {
            "bullet_points": [
                "Analyze the quantitative results from the TDA and GNN experiments.",
                "Interpret the correlation between topological features and assembly bias.",
                "Discuss the GNNâ€™s predictive performance and the significance of the results.",
                "Reference and interpret all key plots and statistics generated in previous steps.",
                "Summarize the main findings, limitations, and implications for cosmological structure formation studies.",
                "Discuss the potential astrophysical implications of the findings, such as how the results could inform future cosmological simulations or observational studies."
            ],
            "sub_task": "Results Analysis and Interpretation",
            "sub_task_agent": "researcher"
        }
    ]
}